body {
  background-color: gray;
  color: white;
  margin: 0px;
  cursor: none;
}

#root {
  position:relative;
  background-color: black;
  overflow:hidden;
  display:grid;
  grid-template-rows: 2.5em auto;
  justify-items: stretch;
  align-items: stretch;

  background-image: linear-gradient(180deg,rgba(50,255,50,.1) 20%, rgba(50,255,50,.3) 100%);
  --stripeSize: .9rem;
}

/* striped bg effect */
#root::before {
  content:"";
  /* opacity: .5; */
  background-image: url('images/bg-stripe.png');
  background-size: var(--stripeSize);;
  mask-image: linear-gradient(180deg, rgba(255,255,255,1) 0%, rgba(255,255,255,.4) 100%);
  position:absolute;
  width:100%;
  height:100%;
  z-index: 0;
}

#top {
  text-align: center;
  font-family: 'Unlearned';
  /* text-transform: lowercase; */
  color: rgba(50,255,50,1);
  font-size: 1.5em;
  z-index: 0;
}

#top h1 {
  margin:0;
}

#scenes {
  --min: 5em;
  /* display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: stretch;
  align-content: stretch; */
  --colgap: .7em;
  --rowgap: calc(var(--colgap) * 2);
  column-gap: var(--colgap);
  row-gap: var(--rowgap);
  padding: var(--colgap);
  padding-bottom: var(--rowgap);

  display: grid;
  place-items: start;
  place-content: start;
  grid-template-columns: repeat(auto-fit, minmax(var(--min), 1fr)); /* use auto-fit instead of auto-fill to make the items greedy (taking up all the available space) */
}

#scenes > div {
  /* display: grid; /* this just allows us to place the pseudo element (defined below) and the content in the same space, and to place it */
  /* place-items: center; */
  position: relative;
}

/* trick to ensure each scene_widget is square */
#scenes > div::before {
  content: "";
  padding-top: 100%; /* this is the part that makes it a square */
  display: block;
  height:0;
  /* grid-area: 1/1/2/2; */
}

/* translucent striping over background to imitate CRT, just for a little bit of stylizing */
.scene_widget::after {
  position: absolute;
  left: 0;
  top: 0;

  content:"";
  border-radius: var(--border-rad);
  background-image: url('images/bg-stripe.png');
  background-size: var(--stripeSize);
  mask-image: linear-gradient(180deg, rgba(255,255,255,.1) 60%, rgba(255,255,255,.3) 100%);
  width:100%;
  height:100%;
}

.scene_widget > .data {
  /* grid-area: 1/1/2/2; */
  position: absolute;
  left: 50%;
  top: 50%;
  transform:  translate(-50%,-50%) scaleY(1);
  z-index: 100; /* place it above the ::after pseudo-element with the CRT striping */

  /* font-size: 3em; */
  font-family: 'AdvancedDot';
  padding-top:.7em; /* hacky way to visually vertically center the text so that the position and transform values don't have to do that work */
  word-spacing: -.7em;
  color: white;
  /* color: rgba(50,255,50,1); */
  text-shadow: 0em 0em .1em rgba(0,0,0,1), 0em 0em .1em rgba(0,0,0,1), 0em 0em .2em rgba(0,0,0,1), 0em 0em .3em rgba(0,0,0,1), 0em 0em .4em magenta;
}

.scene_widget > .name {
  position: absolute;
  left: 50%;
  bottom: -1.2em;
  transform:  translate(-50%,0) scaleY(1);

  font-family: "Orbitron";
  font-size: 1.5rem;
  color: white;
  text-shadow: 0em 0em .1em rgba(0,0,0,1), 0em 0em .1em rgba(0,0,0,1), 0em 0em .5em rgba(0,0,0,1), 0em 0em .5em rgba(0,0,0,1);
}


.scene_widget {
  --border-rad: 1.5rem;
  cursor: pointer;
  box-sizing: border-box;
  width: 100%;
  border-radius: var(--border-rad);
  background: rgba(255,50,200,.5);
  background-size: cover;
  /* box-shadow: 0 0 .5em -.1em rgba(50,255,50,.5); */
  box-shadow: 0 0 .5rem 0rem rgba(0,0,0,.5);
}

/* INDIVIDUAL SCENE STYLES */

.scene_widget#sunlight > .data {
  top: 70%;
  color: rgba(255,255,180,1);
}

.scene_widget#thermostat {
  /* border: .2em solid rgba(50,255,50,1); */
  /* box-shadow: inset 0 0 1em 0em rgba(50,255,50,.6); */
  box-shadow: inset 0 0 1em 0em rgba(255,50,200,.6);

}
.scene_widget#thermostat > .data {
  color: rgba(50,255,50,1);
  /* -webkit-text-stroke: .01em black; */
  text-shadow: 0em 0.1em .2em rgba(0,0,0,1), 0em 0em .2em rgba(0,0,0,1), 0em 0em .3em rgba(0,0,0,1), 0em 0em .3em rgba(0,0,0,1), 0em 0em .3em rgba(0,0,0,1), 0em 0em .3em rgba(0,0,0,1), 0em 0em .7em rgba(0,0,0,1), 0em 0em .7em rgba(0,0,0,1), 0em 0em .7em rgba(0,0,0,1), 0em 0em .7em rgba(0,0,0,1), 0em 0em .7em rgba(0,0,0,1), 0em 0em .7em rgba(0,0,0,1);
}
